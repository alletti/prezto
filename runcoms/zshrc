#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Customize to your needs...
alias ls='ls -FG'
alias ll='ls -alFG'
alias vim='mvim -v'
alias cvlc='/Applications/VLC.app/Contents/MacOS/VLC -I rc'
alias lockscreen='/System/Library/CoreServices/Menu\ Extras/User.menu/Contents/Resources/CGSession -suspend'
alias psgrep='ps cax | grep'

# Set Emacs bindings for command line
bindkey -e

autoload -U colors compinit complist autocomplete select-word-style
colors
compinit
select-word-style bash

# History configuration
HISTSIZE=10000
SAVEHIST=10000
HISTFILE=~/.history

# Changes binding of up and down keys
# bindkey '\e[A' history-beginning-search-backward
# bindkey '\e[B' history-beginning-search-forward

setopt INC_APPEND_HISTORY
setopt SHARE_HISTORY
setopt HIST_IGNORE_ALL_DUPS
setopt HIST_SAVE_NO_DUPS
setopt HIST_REDUCE_BLANKS
setopt HIST_NO_STORE
setopt HIST_NO_FUNCTIONS
setopt HIST_BEEP
setopt EXTENDEDGLOB

# Open or attach to a tmux console session
function console {
  tmux has-session -t console
  if [ $? != 0 ]
  then
    tmux new-session -s console -n console -d
  fi
  tmux attach -t console
}

# Trash commands
alias emptytrash='osascript -e "tell application \"Finder\" to empty the trash"'

# Xcode Simulator
alias sim="xcrun simctl spawn booted"
hash -d simroot="$(xcrun simctl runtime info path)"/Contents/Resources/RuntimeRoot

# Looks for a version.rb file
function parse_ruby_version_and_add_brackets {
  find ./lib -maxdepth 3 -name '*version.rb' -exec cat {} \; 2> /dev/null | grep "VERSION *=" | sed -e 's/[^"]*"\([^"]*\)"$/\[\1\]/'
}

if [[ -s "/usr/local/bin/rbenv" ]]
then
	eval "$(rbenv init -)"
  export RUBY_CONFIGURE_OPTS="--with-openssl-dir=$(brew --prefix openssl@1.1)"
fi

# Use dev Ansible if present
if [[ -s "${ZDOTDIR:-$HOME}/Projects/ansible/hacking/env-setup" ]]; then
  source "${ZDOTDIR:-$HOME}/Projects/ansible/hacking/env-setup" -q
  unset current_dir
  unset ANSIBLE_HOME
fi
PATH=~/.xclink/bin:$PATH

# TDG Rez configuration
export PATH="/usr/local/apps/rez/_core/2.18.0-a0/osx/bin/rez:/Volumes/TDG-CCT/pipeline/packages/rez/_core/2.18.0/osx/bin/rez:$PATH"
export REZ_CONFIG_FILE="/Volumes/TDG-CCT/pipeline/config/rez/rezconfig.py"

# Open newest build log for given project
newestlog () {
  open -a /System/Applications/Utilities/Console.app ~rc/Software/CondorsFlight/Updates/NewestCondorsFlight/BuildRecords/$1/Log
}

download_newestlog() {
  SOURCE=~rc/Software/CondorsFlight/Updates/NewestCondorsFlight/BuildRecords/$1/Log
  FIRST_LINE=$(cat ${SOURCE} | head -n 2 | tail -n 1)
  PROJ_BUILD=$(echo $FIRST_LINE | sed "s/.*\($1[^ ]*\).*/\1/")
  BUILD_PHASE=$(echo $FIRST_LINE | cut -f 2 -d ' ')
  DEST=~/Downloads/${PROJ_BUILD}-${BUILD_PHASE}.log
  echo "Downloading ${LOG} -> ${DEST}"
  cp ${LOG} ${DEST}
}